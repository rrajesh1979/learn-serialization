/**
 * Autogenerated by Thrift Compiler (0.14.2)
 *
 * DO NOT EDIT UNLESS YOU ARE SURE THAT YOU KNOW WHAT YOU ARE DOING
 *  @generated
 */
package org.learn.serialization.thrift.impl;

@SuppressWarnings({"cast", "rawtypes", "serial", "unchecked", "unused"})
@javax.annotation.Generated(value = "Autogenerated by Thrift Compiler (0.14.2)", date = "2021-08-01")
public class AccountResource implements org.apache.thrift.TBase<AccountResource, AccountResource._Fields>, java.io.Serializable, Cloneable, Comparable<AccountResource> {
  private static final org.apache.thrift.protocol.TStruct STRUCT_DESC = new org.apache.thrift.protocol.TStruct("AccountResource");

  private static final org.apache.thrift.protocol.TField SERIAL_VERSION_UID_FIELD_DESC = new org.apache.thrift.protocol.TField("serialVersionUID", org.apache.thrift.protocol.TType.I64, (short)1);
  private static final org.apache.thrift.protocol.TField FIRST_NAME_FIELD_DESC = new org.apache.thrift.protocol.TField("firstName", org.apache.thrift.protocol.TType.STRING, (short)2);
  private static final org.apache.thrift.protocol.TField LAST_NAME_FIELD_DESC = new org.apache.thrift.protocol.TField("lastName", org.apache.thrift.protocol.TType.STRING, (short)3);
  private static final org.apache.thrift.protocol.TField ADDRESS_FIELD_DESC = new org.apache.thrift.protocol.TField("address", org.apache.thrift.protocol.TType.STRING, (short)4);
  private static final org.apache.thrift.protocol.TField ACCOUNT_NUMBER_FIELD_DESC = new org.apache.thrift.protocol.TField("accountNumber", org.apache.thrift.protocol.TType.I32, (short)5);
  private static final org.apache.thrift.protocol.TField ACCOUNT_BALANCE_FIELD_DESC = new org.apache.thrift.protocol.TField("accountBalance", org.apache.thrift.protocol.TType.DOUBLE, (short)6);
  private static final org.apache.thrift.protocol.TField ACCOUNT_TYPE_FIELD_DESC = new org.apache.thrift.protocol.TField("accountType", org.apache.thrift.protocol.TType.STRING, (short)7);

  private static final org.apache.thrift.scheme.SchemeFactory STANDARD_SCHEME_FACTORY = new AccountResourceStandardSchemeFactory();
  private static final org.apache.thrift.scheme.SchemeFactory TUPLE_SCHEME_FACTORY = new AccountResourceTupleSchemeFactory();

  public long serialVersionUID; // required
  public @org.apache.thrift.annotation.Nullable java.lang.String firstName; // required
  public @org.apache.thrift.annotation.Nullable java.lang.String lastName; // required
  public @org.apache.thrift.annotation.Nullable java.lang.String address; // required
  public int accountNumber; // required
  public double accountBalance; // required
  public @org.apache.thrift.annotation.Nullable java.lang.String accountType; // required

  /** The set of fields this struct contains, along with convenience methods for finding and manipulating them. */
  public enum _Fields implements org.apache.thrift.TFieldIdEnum {
    SERIAL_VERSION_UID((short)1, "serialVersionUID"),
    FIRST_NAME((short)2, "firstName"),
    LAST_NAME((short)3, "lastName"),
    ADDRESS((short)4, "address"),
    ACCOUNT_NUMBER((short)5, "accountNumber"),
    ACCOUNT_BALANCE((short)6, "accountBalance"),
    ACCOUNT_TYPE((short)7, "accountType");

    private static final java.util.Map<java.lang.String, _Fields> byName = new java.util.HashMap<java.lang.String, _Fields>();

    static {
      for (_Fields field : java.util.EnumSet.allOf(_Fields.class)) {
        byName.put(field.getFieldName(), field);
      }
    }

    /**
     * Find the _Fields constant that matches fieldId, or null if its not found.
     */
    @org.apache.thrift.annotation.Nullable
    public static _Fields findByThriftId(int fieldId) {
      switch(fieldId) {
        case 1: // SERIAL_VERSION_UID
          return SERIAL_VERSION_UID;
        case 2: // FIRST_NAME
          return FIRST_NAME;
        case 3: // LAST_NAME
          return LAST_NAME;
        case 4: // ADDRESS
          return ADDRESS;
        case 5: // ACCOUNT_NUMBER
          return ACCOUNT_NUMBER;
        case 6: // ACCOUNT_BALANCE
          return ACCOUNT_BALANCE;
        case 7: // ACCOUNT_TYPE
          return ACCOUNT_TYPE;
        default:
          return null;
      }
    }

    /**
     * Find the _Fields constant that matches fieldId, throwing an exception
     * if it is not found.
     */
    public static _Fields findByThriftIdOrThrow(int fieldId) {
      _Fields fields = findByThriftId(fieldId);
      if (fields == null) throw new java.lang.IllegalArgumentException("Field " + fieldId + " doesn't exist!");
      return fields;
    }

    /**
     * Find the _Fields constant that matches name, or null if its not found.
     */
    @org.apache.thrift.annotation.Nullable
    public static _Fields findByName(java.lang.String name) {
      return byName.get(name);
    }

    private final short _thriftId;
    private final java.lang.String _fieldName;

    _Fields(short thriftId, java.lang.String fieldName) {
      _thriftId = thriftId;
      _fieldName = fieldName;
    }

    public short getThriftFieldId() {
      return _thriftId;
    }

    public java.lang.String getFieldName() {
      return _fieldName;
    }
  }

  // isset id assignments
  private static final int __SERIALVERSIONUID_ISSET_ID = 0;
  private static final int __ACCOUNTNUMBER_ISSET_ID = 1;
  private static final int __ACCOUNTBALANCE_ISSET_ID = 2;
  private byte __isset_bitfield = 0;
  public static final java.util.Map<_Fields, org.apache.thrift.meta_data.FieldMetaData> metaDataMap;
  static {
    java.util.Map<_Fields, org.apache.thrift.meta_data.FieldMetaData> tmpMap = new java.util.EnumMap<_Fields, org.apache.thrift.meta_data.FieldMetaData>(_Fields.class);
    tmpMap.put(_Fields.SERIAL_VERSION_UID, new org.apache.thrift.meta_data.FieldMetaData("serialVersionUID", org.apache.thrift.TFieldRequirementType.DEFAULT, 
        new org.apache.thrift.meta_data.FieldValueMetaData(org.apache.thrift.protocol.TType.I64)));
    tmpMap.put(_Fields.FIRST_NAME, new org.apache.thrift.meta_data.FieldMetaData("firstName", org.apache.thrift.TFieldRequirementType.DEFAULT, 
        new org.apache.thrift.meta_data.FieldValueMetaData(org.apache.thrift.protocol.TType.STRING)));
    tmpMap.put(_Fields.LAST_NAME, new org.apache.thrift.meta_data.FieldMetaData("lastName", org.apache.thrift.TFieldRequirementType.DEFAULT, 
        new org.apache.thrift.meta_data.FieldValueMetaData(org.apache.thrift.protocol.TType.STRING)));
    tmpMap.put(_Fields.ADDRESS, new org.apache.thrift.meta_data.FieldMetaData("address", org.apache.thrift.TFieldRequirementType.DEFAULT, 
        new org.apache.thrift.meta_data.FieldValueMetaData(org.apache.thrift.protocol.TType.STRING)));
    tmpMap.put(_Fields.ACCOUNT_NUMBER, new org.apache.thrift.meta_data.FieldMetaData("accountNumber", org.apache.thrift.TFieldRequirementType.DEFAULT, 
        new org.apache.thrift.meta_data.FieldValueMetaData(org.apache.thrift.protocol.TType.I32)));
    tmpMap.put(_Fields.ACCOUNT_BALANCE, new org.apache.thrift.meta_data.FieldMetaData("accountBalance", org.apache.thrift.TFieldRequirementType.DEFAULT, 
        new org.apache.thrift.meta_data.FieldValueMetaData(org.apache.thrift.protocol.TType.DOUBLE)));
    tmpMap.put(_Fields.ACCOUNT_TYPE, new org.apache.thrift.meta_data.FieldMetaData("accountType", org.apache.thrift.TFieldRequirementType.DEFAULT, 
        new org.apache.thrift.meta_data.FieldValueMetaData(org.apache.thrift.protocol.TType.STRING)));
    metaDataMap = java.util.Collections.unmodifiableMap(tmpMap);
    org.apache.thrift.meta_data.FieldMetaData.addStructMetaDataMap(AccountResource.class, metaDataMap);
  }

  public AccountResource() {
  }

  public AccountResource(
    long serialVersionUID,
    java.lang.String firstName,
    java.lang.String lastName,
    java.lang.String address,
    int accountNumber,
    double accountBalance,
    java.lang.String accountType)
  {
    this();
    this.serialVersionUID = serialVersionUID;
    setSerialVersionUIDIsSet(true);
    this.firstName = firstName;
    this.lastName = lastName;
    this.address = address;
    this.accountNumber = accountNumber;
    setAccountNumberIsSet(true);
    this.accountBalance = accountBalance;
    setAccountBalanceIsSet(true);
    this.accountType = accountType;
  }

  /**
   * Performs a deep copy on <i>other</i>.
   */
  public AccountResource(AccountResource other) {
    __isset_bitfield = other.__isset_bitfield;
    this.serialVersionUID = other.serialVersionUID;
    if (other.isSetFirstName()) {
      this.firstName = other.firstName;
    }
    if (other.isSetLastName()) {
      this.lastName = other.lastName;
    }
    if (other.isSetAddress()) {
      this.address = other.address;
    }
    this.accountNumber = other.accountNumber;
    this.accountBalance = other.accountBalance;
    if (other.isSetAccountType()) {
      this.accountType = other.accountType;
    }
  }

  public AccountResource deepCopy() {
    return new AccountResource(this);
  }

  @Override
  public void clear() {
    setSerialVersionUIDIsSet(false);
    this.serialVersionUID = 0;
    this.firstName = null;
    this.lastName = null;
    this.address = null;
    setAccountNumberIsSet(false);
    this.accountNumber = 0;
    setAccountBalanceIsSet(false);
    this.accountBalance = 0.0;
    this.accountType = null;
  }

  public long getSerialVersionUID() {
    return this.serialVersionUID;
  }

  public AccountResource setSerialVersionUID(long serialVersionUID) {
    this.serialVersionUID = serialVersionUID;
    setSerialVersionUIDIsSet(true);
    return this;
  }

  public void unsetSerialVersionUID() {
    __isset_bitfield = org.apache.thrift.EncodingUtils.clearBit(__isset_bitfield, __SERIALVERSIONUID_ISSET_ID);
  }

  /** Returns true if field serialVersionUID is set (has been assigned a value) and false otherwise */
  public boolean isSetSerialVersionUID() {
    return org.apache.thrift.EncodingUtils.testBit(__isset_bitfield, __SERIALVERSIONUID_ISSET_ID);
  }

  public void setSerialVersionUIDIsSet(boolean value) {
    __isset_bitfield = org.apache.thrift.EncodingUtils.setBit(__isset_bitfield, __SERIALVERSIONUID_ISSET_ID, value);
  }

  @org.apache.thrift.annotation.Nullable
  public java.lang.String getFirstName() {
    return this.firstName;
  }

  public AccountResource setFirstName(@org.apache.thrift.annotation.Nullable java.lang.String firstName) {
    this.firstName = firstName;
    return this;
  }

  public void unsetFirstName() {
    this.firstName = null;
  }

  /** Returns true if field firstName is set (has been assigned a value) and false otherwise */
  public boolean isSetFirstName() {
    return this.firstName != null;
  }

  public void setFirstNameIsSet(boolean value) {
    if (!value) {
      this.firstName = null;
    }
  }

  @org.apache.thrift.annotation.Nullable
  public java.lang.String getLastName() {
    return this.lastName;
  }

  public AccountResource setLastName(@org.apache.thrift.annotation.Nullable java.lang.String lastName) {
    this.lastName = lastName;
    return this;
  }

  public void unsetLastName() {
    this.lastName = null;
  }

  /** Returns true if field lastName is set (has been assigned a value) and false otherwise */
  public boolean isSetLastName() {
    return this.lastName != null;
  }

  public void setLastNameIsSet(boolean value) {
    if (!value) {
      this.lastName = null;
    }
  }

  @org.apache.thrift.annotation.Nullable
  public java.lang.String getAddress() {
    return this.address;
  }

  public AccountResource setAddress(@org.apache.thrift.annotation.Nullable java.lang.String address) {
    this.address = address;
    return this;
  }

  public void unsetAddress() {
    this.address = null;
  }

  /** Returns true if field address is set (has been assigned a value) and false otherwise */
  public boolean isSetAddress() {
    return this.address != null;
  }

  public void setAddressIsSet(boolean value) {
    if (!value) {
      this.address = null;
    }
  }

  public int getAccountNumber() {
    return this.accountNumber;
  }

  public AccountResource setAccountNumber(int accountNumber) {
    this.accountNumber = accountNumber;
    setAccountNumberIsSet(true);
    return this;
  }

  public void unsetAccountNumber() {
    __isset_bitfield = org.apache.thrift.EncodingUtils.clearBit(__isset_bitfield, __ACCOUNTNUMBER_ISSET_ID);
  }

  /** Returns true if field accountNumber is set (has been assigned a value) and false otherwise */
  public boolean isSetAccountNumber() {
    return org.apache.thrift.EncodingUtils.testBit(__isset_bitfield, __ACCOUNTNUMBER_ISSET_ID);
  }

  public void setAccountNumberIsSet(boolean value) {
    __isset_bitfield = org.apache.thrift.EncodingUtils.setBit(__isset_bitfield, __ACCOUNTNUMBER_ISSET_ID, value);
  }

  public double getAccountBalance() {
    return this.accountBalance;
  }

  public AccountResource setAccountBalance(double accountBalance) {
    this.accountBalance = accountBalance;
    setAccountBalanceIsSet(true);
    return this;
  }

  public void unsetAccountBalance() {
    __isset_bitfield = org.apache.thrift.EncodingUtils.clearBit(__isset_bitfield, __ACCOUNTBALANCE_ISSET_ID);
  }

  /** Returns true if field accountBalance is set (has been assigned a value) and false otherwise */
  public boolean isSetAccountBalance() {
    return org.apache.thrift.EncodingUtils.testBit(__isset_bitfield, __ACCOUNTBALANCE_ISSET_ID);
  }

  public void setAccountBalanceIsSet(boolean value) {
    __isset_bitfield = org.apache.thrift.EncodingUtils.setBit(__isset_bitfield, __ACCOUNTBALANCE_ISSET_ID, value);
  }

  @org.apache.thrift.annotation.Nullable
  public java.lang.String getAccountType() {
    return this.accountType;
  }

  public AccountResource setAccountType(@org.apache.thrift.annotation.Nullable java.lang.String accountType) {
    this.accountType = accountType;
    return this;
  }

  public void unsetAccountType() {
    this.accountType = null;
  }

  /** Returns true if field accountType is set (has been assigned a value) and false otherwise */
  public boolean isSetAccountType() {
    return this.accountType != null;
  }

  public void setAccountTypeIsSet(boolean value) {
    if (!value) {
      this.accountType = null;
    }
  }

  public void setFieldValue(_Fields field, @org.apache.thrift.annotation.Nullable java.lang.Object value) {
    switch (field) {
    case SERIAL_VERSION_UID:
      if (value == null) {
        unsetSerialVersionUID();
      } else {
        setSerialVersionUID((java.lang.Long)value);
      }
      break;

    case FIRST_NAME:
      if (value == null) {
        unsetFirstName();
      } else {
        setFirstName((java.lang.String)value);
      }
      break;

    case LAST_NAME:
      if (value == null) {
        unsetLastName();
      } else {
        setLastName((java.lang.String)value);
      }
      break;

    case ADDRESS:
      if (value == null) {
        unsetAddress();
      } else {
        setAddress((java.lang.String)value);
      }
      break;

    case ACCOUNT_NUMBER:
      if (value == null) {
        unsetAccountNumber();
      } else {
        setAccountNumber((java.lang.Integer)value);
      }
      break;

    case ACCOUNT_BALANCE:
      if (value == null) {
        unsetAccountBalance();
      } else {
        setAccountBalance((java.lang.Double)value);
      }
      break;

    case ACCOUNT_TYPE:
      if (value == null) {
        unsetAccountType();
      } else {
        setAccountType((java.lang.String)value);
      }
      break;

    }
  }

  @org.apache.thrift.annotation.Nullable
  public java.lang.Object getFieldValue(_Fields field) {
    switch (field) {
    case SERIAL_VERSION_UID:
      return getSerialVersionUID();

    case FIRST_NAME:
      return getFirstName();

    case LAST_NAME:
      return getLastName();

    case ADDRESS:
      return getAddress();

    case ACCOUNT_NUMBER:
      return getAccountNumber();

    case ACCOUNT_BALANCE:
      return getAccountBalance();

    case ACCOUNT_TYPE:
      return getAccountType();

    }
    throw new java.lang.IllegalStateException();
  }

  /** Returns true if field corresponding to fieldID is set (has been assigned a value) and false otherwise */
  public boolean isSet(_Fields field) {
    if (field == null) {
      throw new java.lang.IllegalArgumentException();
    }

    switch (field) {
    case SERIAL_VERSION_UID:
      return isSetSerialVersionUID();
    case FIRST_NAME:
      return isSetFirstName();
    case LAST_NAME:
      return isSetLastName();
    case ADDRESS:
      return isSetAddress();
    case ACCOUNT_NUMBER:
      return isSetAccountNumber();
    case ACCOUNT_BALANCE:
      return isSetAccountBalance();
    case ACCOUNT_TYPE:
      return isSetAccountType();
    }
    throw new java.lang.IllegalStateException();
  }

  @Override
  public boolean equals(java.lang.Object that) {
    if (that instanceof AccountResource)
      return this.equals((AccountResource)that);
    return false;
  }

  public boolean equals(AccountResource that) {
    if (that == null)
      return false;
    if (this == that)
      return true;

    boolean this_present_serialVersionUID = true;
    boolean that_present_serialVersionUID = true;
    if (this_present_serialVersionUID || that_present_serialVersionUID) {
      if (!(this_present_serialVersionUID && that_present_serialVersionUID))
        return false;
      if (this.serialVersionUID != that.serialVersionUID)
        return false;
    }

    boolean this_present_firstName = true && this.isSetFirstName();
    boolean that_present_firstName = true && that.isSetFirstName();
    if (this_present_firstName || that_present_firstName) {
      if (!(this_present_firstName && that_present_firstName))
        return false;
      if (!this.firstName.equals(that.firstName))
        return false;
    }

    boolean this_present_lastName = true && this.isSetLastName();
    boolean that_present_lastName = true && that.isSetLastName();
    if (this_present_lastName || that_present_lastName) {
      if (!(this_present_lastName && that_present_lastName))
        return false;
      if (!this.lastName.equals(that.lastName))
        return false;
    }

    boolean this_present_address = true && this.isSetAddress();
    boolean that_present_address = true && that.isSetAddress();
    if (this_present_address || that_present_address) {
      if (!(this_present_address && that_present_address))
        return false;
      if (!this.address.equals(that.address))
        return false;
    }

    boolean this_present_accountNumber = true;
    boolean that_present_accountNumber = true;
    if (this_present_accountNumber || that_present_accountNumber) {
      if (!(this_present_accountNumber && that_present_accountNumber))
        return false;
      if (this.accountNumber != that.accountNumber)
        return false;
    }

    boolean this_present_accountBalance = true;
    boolean that_present_accountBalance = true;
    if (this_present_accountBalance || that_present_accountBalance) {
      if (!(this_present_accountBalance && that_present_accountBalance))
        return false;
      if (this.accountBalance != that.accountBalance)
        return false;
    }

    boolean this_present_accountType = true && this.isSetAccountType();
    boolean that_present_accountType = true && that.isSetAccountType();
    if (this_present_accountType || that_present_accountType) {
      if (!(this_present_accountType && that_present_accountType))
        return false;
      if (!this.accountType.equals(that.accountType))
        return false;
    }

    return true;
  }

  @Override
  public int hashCode() {
    int hashCode = 1;

    hashCode = hashCode * 8191 + org.apache.thrift.TBaseHelper.hashCode(serialVersionUID);

    hashCode = hashCode * 8191 + ((isSetFirstName()) ? 131071 : 524287);
    if (isSetFirstName())
      hashCode = hashCode * 8191 + firstName.hashCode();

    hashCode = hashCode * 8191 + ((isSetLastName()) ? 131071 : 524287);
    if (isSetLastName())
      hashCode = hashCode * 8191 + lastName.hashCode();

    hashCode = hashCode * 8191 + ((isSetAddress()) ? 131071 : 524287);
    if (isSetAddress())
      hashCode = hashCode * 8191 + address.hashCode();

    hashCode = hashCode * 8191 + accountNumber;

    hashCode = hashCode * 8191 + org.apache.thrift.TBaseHelper.hashCode(accountBalance);

    hashCode = hashCode * 8191 + ((isSetAccountType()) ? 131071 : 524287);
    if (isSetAccountType())
      hashCode = hashCode * 8191 + accountType.hashCode();

    return hashCode;
  }

  @Override
  public int compareTo(AccountResource other) {
    if (!getClass().equals(other.getClass())) {
      return getClass().getName().compareTo(other.getClass().getName());
    }

    int lastComparison = 0;

    lastComparison = java.lang.Boolean.compare(isSetSerialVersionUID(), other.isSetSerialVersionUID());
    if (lastComparison != 0) {
      return lastComparison;
    }
    if (isSetSerialVersionUID()) {
      lastComparison = org.apache.thrift.TBaseHelper.compareTo(this.serialVersionUID, other.serialVersionUID);
      if (lastComparison != 0) {
        return lastComparison;
      }
    }
    lastComparison = java.lang.Boolean.compare(isSetFirstName(), other.isSetFirstName());
    if (lastComparison != 0) {
      return lastComparison;
    }
    if (isSetFirstName()) {
      lastComparison = org.apache.thrift.TBaseHelper.compareTo(this.firstName, other.firstName);
      if (lastComparison != 0) {
        return lastComparison;
      }
    }
    lastComparison = java.lang.Boolean.compare(isSetLastName(), other.isSetLastName());
    if (lastComparison != 0) {
      return lastComparison;
    }
    if (isSetLastName()) {
      lastComparison = org.apache.thrift.TBaseHelper.compareTo(this.lastName, other.lastName);
      if (lastComparison != 0) {
        return lastComparison;
      }
    }
    lastComparison = java.lang.Boolean.compare(isSetAddress(), other.isSetAddress());
    if (lastComparison != 0) {
      return lastComparison;
    }
    if (isSetAddress()) {
      lastComparison = org.apache.thrift.TBaseHelper.compareTo(this.address, other.address);
      if (lastComparison != 0) {
        return lastComparison;
      }
    }
    lastComparison = java.lang.Boolean.compare(isSetAccountNumber(), other.isSetAccountNumber());
    if (lastComparison != 0) {
      return lastComparison;
    }
    if (isSetAccountNumber()) {
      lastComparison = org.apache.thrift.TBaseHelper.compareTo(this.accountNumber, other.accountNumber);
      if (lastComparison != 0) {
        return lastComparison;
      }
    }
    lastComparison = java.lang.Boolean.compare(isSetAccountBalance(), other.isSetAccountBalance());
    if (lastComparison != 0) {
      return lastComparison;
    }
    if (isSetAccountBalance()) {
      lastComparison = org.apache.thrift.TBaseHelper.compareTo(this.accountBalance, other.accountBalance);
      if (lastComparison != 0) {
        return lastComparison;
      }
    }
    lastComparison = java.lang.Boolean.compare(isSetAccountType(), other.isSetAccountType());
    if (lastComparison != 0) {
      return lastComparison;
    }
    if (isSetAccountType()) {
      lastComparison = org.apache.thrift.TBaseHelper.compareTo(this.accountType, other.accountType);
      if (lastComparison != 0) {
        return lastComparison;
      }
    }
    return 0;
  }

  @org.apache.thrift.annotation.Nullable
  public _Fields fieldForId(int fieldId) {
    return _Fields.findByThriftId(fieldId);
  }

  public void read(org.apache.thrift.protocol.TProtocol iprot) throws org.apache.thrift.TException {
    scheme(iprot).read(iprot, this);
  }

  public void write(org.apache.thrift.protocol.TProtocol oprot) throws org.apache.thrift.TException {
    scheme(oprot).write(oprot, this);
  }

  @Override
  public java.lang.String toString() {
    java.lang.StringBuilder sb = new java.lang.StringBuilder("AccountResource(");
    boolean first = true;

    sb.append("serialVersionUID:");
    sb.append(this.serialVersionUID);
    first = false;
    if (!first) sb.append(", ");
    sb.append("firstName:");
    if (this.firstName == null) {
      sb.append("null");
    } else {
      sb.append(this.firstName);
    }
    first = false;
    if (!first) sb.append(", ");
    sb.append("lastName:");
    if (this.lastName == null) {
      sb.append("null");
    } else {
      sb.append(this.lastName);
    }
    first = false;
    if (!first) sb.append(", ");
    sb.append("address:");
    if (this.address == null) {
      sb.append("null");
    } else {
      sb.append(this.address);
    }
    first = false;
    if (!first) sb.append(", ");
    sb.append("accountNumber:");
    sb.append(this.accountNumber);
    first = false;
    if (!first) sb.append(", ");
    sb.append("accountBalance:");
    sb.append(this.accountBalance);
    first = false;
    if (!first) sb.append(", ");
    sb.append("accountType:");
    if (this.accountType == null) {
      sb.append("null");
    } else {
      sb.append(this.accountType);
    }
    first = false;
    sb.append(")");
    return sb.toString();
  }

  public void validate() throws org.apache.thrift.TException {
    // check for required fields
    // check for sub-struct validity
  }

  private void writeObject(java.io.ObjectOutputStream out) throws java.io.IOException {
    try {
      write(new org.apache.thrift.protocol.TCompactProtocol(new org.apache.thrift.transport.TIOStreamTransport(out)));
    } catch (org.apache.thrift.TException te) {
      throw new java.io.IOException(te);
    }
  }

  private void readObject(java.io.ObjectInputStream in) throws java.io.IOException, java.lang.ClassNotFoundException {
    try {
      // it doesn't seem like you should have to do this, but java serialization is wacky, and doesn't call the default constructor.
      __isset_bitfield = 0;
      read(new org.apache.thrift.protocol.TCompactProtocol(new org.apache.thrift.transport.TIOStreamTransport(in)));
    } catch (org.apache.thrift.TException te) {
      throw new java.io.IOException(te);
    }
  }

  private static class AccountResourceStandardSchemeFactory implements org.apache.thrift.scheme.SchemeFactory {
    public AccountResourceStandardScheme getScheme() {
      return new AccountResourceStandardScheme();
    }
  }

  private static class AccountResourceStandardScheme extends org.apache.thrift.scheme.StandardScheme<AccountResource> {

    public void read(org.apache.thrift.protocol.TProtocol iprot, AccountResource struct) throws org.apache.thrift.TException {
      org.apache.thrift.protocol.TField schemeField;
      iprot.readStructBegin();
      while (true)
      {
        schemeField = iprot.readFieldBegin();
        if (schemeField.type == org.apache.thrift.protocol.TType.STOP) { 
          break;
        }
        switch (schemeField.id) {
          case 1: // SERIAL_VERSION_UID
            if (schemeField.type == org.apache.thrift.protocol.TType.I64) {
              struct.serialVersionUID = iprot.readI64();
              struct.setSerialVersionUIDIsSet(true);
            } else { 
              org.apache.thrift.protocol.TProtocolUtil.skip(iprot, schemeField.type);
            }
            break;
          case 2: // FIRST_NAME
            if (schemeField.type == org.apache.thrift.protocol.TType.STRING) {
              struct.firstName = iprot.readString();
              struct.setFirstNameIsSet(true);
            } else { 
              org.apache.thrift.protocol.TProtocolUtil.skip(iprot, schemeField.type);
            }
            break;
          case 3: // LAST_NAME
            if (schemeField.type == org.apache.thrift.protocol.TType.STRING) {
              struct.lastName = iprot.readString();
              struct.setLastNameIsSet(true);
            } else { 
              org.apache.thrift.protocol.TProtocolUtil.skip(iprot, schemeField.type);
            }
            break;
          case 4: // ADDRESS
            if (schemeField.type == org.apache.thrift.protocol.TType.STRING) {
              struct.address = iprot.readString();
              struct.setAddressIsSet(true);
            } else { 
              org.apache.thrift.protocol.TProtocolUtil.skip(iprot, schemeField.type);
            }
            break;
          case 5: // ACCOUNT_NUMBER
            if (schemeField.type == org.apache.thrift.protocol.TType.I32) {
              struct.accountNumber = iprot.readI32();
              struct.setAccountNumberIsSet(true);
            } else { 
              org.apache.thrift.protocol.TProtocolUtil.skip(iprot, schemeField.type);
            }
            break;
          case 6: // ACCOUNT_BALANCE
            if (schemeField.type == org.apache.thrift.protocol.TType.DOUBLE) {
              struct.accountBalance = iprot.readDouble();
              struct.setAccountBalanceIsSet(true);
            } else { 
              org.apache.thrift.protocol.TProtocolUtil.skip(iprot, schemeField.type);
            }
            break;
          case 7: // ACCOUNT_TYPE
            if (schemeField.type == org.apache.thrift.protocol.TType.STRING) {
              struct.accountType = iprot.readString();
              struct.setAccountTypeIsSet(true);
            } else { 
              org.apache.thrift.protocol.TProtocolUtil.skip(iprot, schemeField.type);
            }
            break;
          default:
            org.apache.thrift.protocol.TProtocolUtil.skip(iprot, schemeField.type);
        }
        iprot.readFieldEnd();
      }
      iprot.readStructEnd();

      // check for required fields of primitive type, which can't be checked in the validate method
      struct.validate();
    }

    public void write(org.apache.thrift.protocol.TProtocol oprot, AccountResource struct) throws org.apache.thrift.TException {
      struct.validate();

      oprot.writeStructBegin(STRUCT_DESC);
      oprot.writeFieldBegin(SERIAL_VERSION_UID_FIELD_DESC);
      oprot.writeI64(struct.serialVersionUID);
      oprot.writeFieldEnd();
      if (struct.firstName != null) {
        oprot.writeFieldBegin(FIRST_NAME_FIELD_DESC);
        oprot.writeString(struct.firstName);
        oprot.writeFieldEnd();
      }
      if (struct.lastName != null) {
        oprot.writeFieldBegin(LAST_NAME_FIELD_DESC);
        oprot.writeString(struct.lastName);
        oprot.writeFieldEnd();
      }
      if (struct.address != null) {
        oprot.writeFieldBegin(ADDRESS_FIELD_DESC);
        oprot.writeString(struct.address);
        oprot.writeFieldEnd();
      }
      oprot.writeFieldBegin(ACCOUNT_NUMBER_FIELD_DESC);
      oprot.writeI32(struct.accountNumber);
      oprot.writeFieldEnd();
      oprot.writeFieldBegin(ACCOUNT_BALANCE_FIELD_DESC);
      oprot.writeDouble(struct.accountBalance);
      oprot.writeFieldEnd();
      if (struct.accountType != null) {
        oprot.writeFieldBegin(ACCOUNT_TYPE_FIELD_DESC);
        oprot.writeString(struct.accountType);
        oprot.writeFieldEnd();
      }
      oprot.writeFieldStop();
      oprot.writeStructEnd();
    }

  }

  private static class AccountResourceTupleSchemeFactory implements org.apache.thrift.scheme.SchemeFactory {
    public AccountResourceTupleScheme getScheme() {
      return new AccountResourceTupleScheme();
    }
  }

  private static class AccountResourceTupleScheme extends org.apache.thrift.scheme.TupleScheme<AccountResource> {

    @Override
    public void write(org.apache.thrift.protocol.TProtocol prot, AccountResource struct) throws org.apache.thrift.TException {
      org.apache.thrift.protocol.TTupleProtocol oprot = (org.apache.thrift.protocol.TTupleProtocol) prot;
      java.util.BitSet optionals = new java.util.BitSet();
      if (struct.isSetSerialVersionUID()) {
        optionals.set(0);
      }
      if (struct.isSetFirstName()) {
        optionals.set(1);
      }
      if (struct.isSetLastName()) {
        optionals.set(2);
      }
      if (struct.isSetAddress()) {
        optionals.set(3);
      }
      if (struct.isSetAccountNumber()) {
        optionals.set(4);
      }
      if (struct.isSetAccountBalance()) {
        optionals.set(5);
      }
      if (struct.isSetAccountType()) {
        optionals.set(6);
      }
      oprot.writeBitSet(optionals, 7);
      if (struct.isSetSerialVersionUID()) {
        oprot.writeI64(struct.serialVersionUID);
      }
      if (struct.isSetFirstName()) {
        oprot.writeString(struct.firstName);
      }
      if (struct.isSetLastName()) {
        oprot.writeString(struct.lastName);
      }
      if (struct.isSetAddress()) {
        oprot.writeString(struct.address);
      }
      if (struct.isSetAccountNumber()) {
        oprot.writeI32(struct.accountNumber);
      }
      if (struct.isSetAccountBalance()) {
        oprot.writeDouble(struct.accountBalance);
      }
      if (struct.isSetAccountType()) {
        oprot.writeString(struct.accountType);
      }
    }

    @Override
    public void read(org.apache.thrift.protocol.TProtocol prot, AccountResource struct) throws org.apache.thrift.TException {
      org.apache.thrift.protocol.TTupleProtocol iprot = (org.apache.thrift.protocol.TTupleProtocol) prot;
      java.util.BitSet incoming = iprot.readBitSet(7);
      if (incoming.get(0)) {
        struct.serialVersionUID = iprot.readI64();
        struct.setSerialVersionUIDIsSet(true);
      }
      if (incoming.get(1)) {
        struct.firstName = iprot.readString();
        struct.setFirstNameIsSet(true);
      }
      if (incoming.get(2)) {
        struct.lastName = iprot.readString();
        struct.setLastNameIsSet(true);
      }
      if (incoming.get(3)) {
        struct.address = iprot.readString();
        struct.setAddressIsSet(true);
      }
      if (incoming.get(4)) {
        struct.accountNumber = iprot.readI32();
        struct.setAccountNumberIsSet(true);
      }
      if (incoming.get(5)) {
        struct.accountBalance = iprot.readDouble();
        struct.setAccountBalanceIsSet(true);
      }
      if (incoming.get(6)) {
        struct.accountType = iprot.readString();
        struct.setAccountTypeIsSet(true);
      }
    }
  }

  private static <S extends org.apache.thrift.scheme.IScheme> S scheme(org.apache.thrift.protocol.TProtocol proto) {
    return (org.apache.thrift.scheme.StandardScheme.class.equals(proto.getScheme()) ? STANDARD_SCHEME_FACTORY : TUPLE_SCHEME_FACTORY).getScheme();
  }
}

